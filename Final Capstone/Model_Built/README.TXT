------------------------------------------------------------------------

------------------------------------------------------------------------

Overview: This capstone was made to model collision detection between
a circular objects and the four sides of a JFrame. Secondly, it was to model
perfect elastic collisions between two circles in one dimension. Where the velocity
of the first object is set by the setHorizontalCollision() and setVerticalCollision() methods
in the ModelPanel class. The velocity of the second object is zero and the mass of each object is
also set by the aforementioned methods. The program will cease to run once the circles have
collided with the Jframe.

Synthesis: This capstone incorporates the concepts of the following
- boolean logic such as if, else if and else statements and true false checks.
- Class inheritance and interfaces.
- Encapsulation via usage of imported classes.
- Accessor and mutator methods.
- static methods and variables.
- Java GUI manipulation in the form of JFrame and JPanel and the circle objects and their points.
- Class design
- Mathematical operations
- Console output
Theses concepts were synthesized with my outside research of elastic collisions between
a nonmoving object, a moving object and frames.
Through the usage of java design and implementation
I was able to precisely model these real world object collisions.

Operation: Simply run the main method of the ModelViewer class to demonstrate examples vertical
and horizontal collision. The collisions can be modified by changing the mass1, mass2,
componentX1 or componentY1 in the setHorizontalCollision() and setVerticalCollision() methods
found in the ModelPanel class. Although the components must be kept at 1 or lower to ensure
precise measurements. A console will deliver output of mass1, mass2, inital velocity1, intial velocity2,
final velocity1 and final velocity2.
 



 