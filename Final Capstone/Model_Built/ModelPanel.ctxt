#BlueJ class context
comment0.params=
comment0.target=ModelPanel()
comment0.text=\r\n\ ModelPanel\ Constructor\r\nsets\ the\ background\ color\ of\ the\ panel\ to\ black\r\n
comment1.params=g
comment1.target=void\ paintComponent(java.awt.Graphics)
comment1.text=\r\n\ Instantiates\ two\ circles\ and\ colors\ them\ in\ using\ the\ PhysicsCircle\ class.\r\n\r\n\ @param\ g\ needed\ for\ gui\ and\ graphics\r\n
comment10.params=
comment10.target=void\ checkVerticalCollision()
comment10.text=\r\n\ Uses\ the\ circleCollisionDetected\ method\ to\ see\ if\ the\ distance\r\n\ between\ the\ circles\ is\ zero,\ then\ changes\ the\ velocities\ to\ the\ \r\n\ new\ calculated\ ones\ after\ impact\r\n
comment2.params=
comment2.target=boolean\ circleCollisionDetected()
comment2.text=\r\n\ Checks\ the\ distance\ between\ Circles.\r\n\r\n\ @return\ True\ if\ the\ circles\ are\ touching,\ false\ if\ they\ are\ not\r\n
comment3.params=
comment3.target=boolean\ frameCircleCollisionDetectedCirc1()
comment3.text=\r\n\ Calculates\ the\ distance\ between\ circle\ 1\ and\ all\ four\ edges\ of\ the\ frame\r\n\r\n\ @return\ True\ if\ any\ part\ of\ the\ circle\ touchs\ and\ part\ of\ the\ frame,\ false\ if\ no\ collision\r\n\r\n\ @throws\ exception\r\n
comment4.params=
comment4.target=boolean\ frameCircleCollisionDetectedCirc2()
comment4.text=\r\n\ Calculates\ the\ distance\ between\ circle\ 2\ and\ all\ four\ edges\ of\ the\ frame\r\n\r\n\ @return\ True\ if\ any\ part\ of\ the\ circle\ touchs\ and\ part\ of\ the\ frame,\ false\ if\ no\ collision\r\n
comment5.params=
comment5.target=void\ moveCircle1()
comment5.text=\r\n\ Moves\ circle1\ according\ the\ component\ velocities\r\n\r\n
comment6.params=
comment6.target=void\ moveCircle2()
comment6.text=\r\n\ Moves\ circle2\ according\ the\ component\ velocities\r\n\r\n
comment7.params=
comment7.target=void\ setHorizontalCollision()
comment7.text=\r\n\ Sets\ the\ mass,\ starting\ point\ and\ velocity\ of\ the\ circles\ \r\nfor\ a\ horizontal\ collison,\ then\ calculates\ the\ final\ velocities\r\n
comment8.params=
comment8.target=void\ setVerticalCollision()
comment8.text=\r\n\ Method\ setVerticalCollision\r\n\r\n
comment9.params=
comment9.target=void\ checkHorizontalCollision()
comment9.text=\r\n\ Uses\ the\ circleCollisionDetected\ method\ to\ see\ if\ the\ distance\r\n\ between\ the\ circles\ is\ zero,\ then\ changes\ the\ velocities\ to\ the\ \r\n\ new\ calculated\ ones\ after\ impact\r\n
numComments=11
